给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。

示例 1:

输入: 1->1->2
输出: 1->2
示例 2:

输入: 1->1->2->3->3
输出: 1->2->3


Java:(AC)
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

思路：遍历节点，如果相邻节点相同，则将当前节点temp的next指向next.next,如果不同，则将当前节点temp变为下一个即可.
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null){
            return head;
        }
        ListNode temp = head;
        while(temp.next != null){
            ListNode tempNext = temp.next;
            if(temp.val == tempNext.val){
                temp.next = tempNext.next;
            }else{
                temp = temp.next;
            }
        }
        //return temp;会报错，因为返回的是temp这个节点而已
        return head;
    }
}
