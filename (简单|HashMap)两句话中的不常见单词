给定两个句子 A 和 B 。 （句子是一串由空格分隔的单词。每个单词仅由小写字母组成。）
如果一个单词在其中一个句子中只出现一次，在另一个句子中却没有出现，那么这个单词就是不常见的。
返回所有不常用单词的列表。
您可以按任何顺序返回列表

示例 1：
输入：A = "this apple is sweet", B = "this apple is sour"
输出：["sweet","sour"]

示例 2：
输入：A = "apple apple", B = "banana"
输出：["banana"]

leetcode官方思路:
每个不常见的单词总共只出现一次。我们可以统计每个单词的出现次数，然后返回恰好出现一次的单词。

class Solution {
    public String[] uncommonFromSentences(String A, String B) {
        Map<String,Integer> nums = new HashMap<>();
        for(String word : A.split(" ")){
            //当Map集合中有这个key时，就使用这个key值，如果没有就使用默认值defaultValue(第二个参数)
            nums.put(word,nums.getOrDefault(word,0)+1);
        }
        for(String word : B.split(" ")){
            nums.put(word,nums.getOrDefault(word,0)+1);
        }
        List<String> result = new LinkedList<>();
        for(String word : nums.keySet()){
            if(nums.get(word) == 1){
                result.add(word);
            }
        }
        return result.toArray(new String[result.size()]);
    }
}
